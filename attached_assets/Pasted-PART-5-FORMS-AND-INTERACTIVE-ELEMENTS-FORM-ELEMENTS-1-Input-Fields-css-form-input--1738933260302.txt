PART 5: FORMS AND INTERACTIVE ELEMENTS

FORM ELEMENTS:

1. Input Fields
```css
.form-input {
  width: 100%;
  padding: 12px 16px;
  border: 1px solid #E5E7EB;
  border-radius: 4px;
  font-size: 16px;
  transition: all 0.3s;
}

.form-input:focus {
  border-color: #00A3FF;
  box-shadow: 0 0 0 3px rgba(0, 163, 255, 0.1);
  outline: none;
}

.form-input.error {
  border-color: #EF4444;
}
```

2. Labels
```css
.form-label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: #374151;
}

.required-label::after {
  content: "*";
  color: #EF4444;
  margin-left: 4px;
}
```

3. Form Groups
```css
.form-group {
  margin-bottom: 24px;
}

.form-row {
  display: flex;
  gap: 16px;
  margin-bottom: 24px;
}
```

INTERACTIVE ELEMENTS:

1. Buttons with States
```css
.btn {
  padding: 12px 24px;
  border-radius: 4px;
  font-weight: 600;
  transition: all 0.3s;
  cursor: pointer;
}

.btn-primary {
  background: #00A3FF;
  color: white;
}

.btn-primary:hover {
  background: #0077BB;
}

.btn-primary:disabled {
  background: #CCE4FF;
  cursor: not-allowed;
}
```

2. Dropdowns
```css
.select-wrapper {
  position: relative;
}

.custom-select {
  appearance: none;
  width: 100%;
  padding: 12px 40px 12px 16px;
  background: white;
  border: 1px solid #E5E7EB;
  border-radius: 4px;
}

.select-icon {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
}
```

3. Checkboxes and Radio Buttons
```css
.custom-checkbox {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
}

.checkbox-input {
  width: 20px;
  height: 20px;
  border: 2px solid #00A3FF;
  border-radius: 4px;
}
```

4. Loading States
```css
.loading-spinner {
  width: 24px;
  height: 24px;
  border: 3px solid #f3f3f3;
  border-top: 3px solid #00A3FF;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
```

5. Feedback Messages
```css
.feedback-message {
  padding: 12px 16px;
  border-radius: 4px;
  margin-bottom: 16px;
}

.success-message {
  background: #ECFDF5;
  color: #065F46;
  border: 1px solid #34D399;
}

.error-message {
  background: #FEF2F2;
  color: #991B1B;
  border: 1px solid #EF4444;
}
```

FORM VALIDATION:
```javascript
const validateForm = (formData) => {
  const errors = {};
  
  if (!formData.email) {
    errors.email = 'Email is required';
  } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
    errors.email = 'Invalid email format';
  }
  
  // Add more validation rules
  
  return errors;
};
```

ACCESSIBILITY FEATURES:
- Use proper ARIA labels
- Include error messages in aria-live regions
- Ensure keyboard navigation
- Maintain proper focus states
- Provide clear error feedback